{"ast":null,"code":"import _slicedToArray from\"/Users/kewalwason/Documents/portfolio-react-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Container,ContainerSucces}from'./styles';import{useForm,ValidationError}from'@formspree/react';import{toast,ToastContainer}from'react-toastify';import ReCAPTCHA from'react-google-recaptcha';import{useEffect,useState}from'react';import validator from'validator';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Form(){var _useForm=useForm('myyozglw'),_useForm2=_slicedToArray(_useForm,2),state=_useForm2[0],handleSubmit=_useForm2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),validEmail=_useState2[0],setValidEmail=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isHuman=_useState4[0],setIsHuman=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];function verifyEmail(email){if(validator.isEmail(email)){setValidEmail(true);}else{setValidEmail(false);}}useEffect(function(){if(state.succeeded){toast.success('Email enviado com sucesso!',{position:toast.POSITION.BOTTOM_LEFT,pauseOnFocusLoss:false,closeOnClick:true,hideProgressBar:false,toastId:'succeeded'});}});if(state.succeeded){return/*#__PURE__*/_jsxs(ContainerSucces,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Obrigado por entrar em contact!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){window.scrollTo({top:0,behavior:'smooth'});},children:\"Voltar ao topo\"}),/*#__PURE__*/_jsx(ToastContainer,{})]});}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Get in touch using the form below\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Email\",id:\"email\",type:\"email\",name:\"email\",onChange:function onChange(e){verifyEmail(e.target.value);},required:true}),/*#__PURE__*/_jsx(ValidationError,{prefix:\"Email\",field:\"email\",errors:state.errors}),/*#__PURE__*/_jsx(\"textarea\",{required:true,placeholder:\"Leave Your Message\",id:\"message\",name:\"message\",onChange:function onChange(e){setMessage(e.target.value);}}),/*#__PURE__*/_jsx(ValidationError,{prefix:\"Message\",field:\"message\",errors:state.errors}),/*#__PURE__*/_jsx(ReCAPTCHA,{sitekey:\"6LcAu-IdAAAAAJOTI5E_eRltZNQCvukIl2-f1glQ\",onChange:function onChange(e){setIsHuman(true);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:state.submitting||!validEmail||!message||!isHuman,children:\"Submit\"})]}),/*#__PURE__*/_jsx(ToastContainer,{})]});}","map":{"version":3,"sources":["/Users/kewalwason/Documents/portfolio-react-main/src/components/Form/Form.tsx"],"names":["Container","ContainerSucces","useForm","ValidationError","toast","ToastContainer","ReCAPTCHA","useEffect","useState","validator","Form","state","handleSubmit","validEmail","setValidEmail","isHuman","setIsHuman","message","setMessage","verifyEmail","email","isEmail","succeeded","success","position","POSITION","BOTTOM_LEFT","pauseOnFocusLoss","closeOnClick","hideProgressBar","toastId","window","scrollTo","top","behavior","e","target","value","errors","submitting"],"mappings":"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","sourcesContent":["import { Container, ContainerSucces } from './styles'\nimport { useForm, ValidationError } from '@formspree/react'\nimport { toast, ToastContainer } from 'react-toastify'\nimport ReCAPTCHA from 'react-google-recaptcha'\nimport { useEffect, useState } from 'react'\nimport validator from 'validator'\n\nexport function Form() {\n  const [state, handleSubmit] = useForm('myyozglw')\n\n  const [validEmail, setValidEmail] = useState(false)\n  const [isHuman, setIsHuman] = useState(false)\n  const [message, setMessage] = useState('')\n\n  function verifyEmail(email: string) {\n    if (validator.isEmail(email)) {\n      setValidEmail(true)\n    } else {\n      setValidEmail(false)\n    }\n  }\n\n  useEffect(() => {\n    if (state.succeeded) {\n      toast.success('Email enviado com sucesso!', {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnFocusLoss: false,\n        closeOnClick: true,\n        hideProgressBar: false,\n        toastId: 'succeeded',\n      })\n    }\n  })\n  if (state.succeeded) {\n    return (\n      <ContainerSucces>\n        <h3>Obrigado por entrar em contact!</h3>\n        <button\n          onClick={() => {\n            window.scrollTo({ top: 0, behavior: 'smooth' })\n          }}\n        >\n          Voltar ao topo\n        </button>\n        <ToastContainer />\n      </ContainerSucces>\n    )\n  }\n\n  return (\n    <Container>\n      <h2>Get in touch using the form below</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder=\"Email\"\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          onChange={(e) => {\n            verifyEmail(e.target.value)\n          }}\n          required\n        />\n        <ValidationError prefix=\"Email\" field=\"email\" errors={state.errors} />\n        <textarea\n          required\n          placeholder=\"Leave Your Message\"\n          id=\"message\"\n          name=\"message\"\n          onChange={(e) => {\n            setMessage(e.target.value)\n          }}\n        />\n        <ValidationError\n          prefix=\"Message\"\n          field=\"message\"\n          errors={state.errors}\n        />\n        <ReCAPTCHA\n          sitekey=\"6LcAu-IdAAAAAJOTI5E_eRltZNQCvukIl2-f1glQ\"\n          onChange={(e) => {\n            setIsHuman(true)\n          }}\n        ></ReCAPTCHA>\n        <button\n          type=\"submit\"\n          disabled={state.submitting || !validEmail || !message || !isHuman}\n        >\n          Submit\n        </button>\n      </form>\n      <ToastContainer />\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}